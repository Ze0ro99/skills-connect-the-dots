# This step runs after a learner creates a new repository from the template
# This step sets STEP to 1
# This step closes <details id=0> and opens <details id=1>

on:
  create:
  workflow_dispatch:

permissions:
  contents: write
  pull-requests: write
  issues: write

jobs:
  get_current_step:
    name: Check current step number
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - id: get_step
        run: echo "::set-output name=current_step::$(cat ./.github/script/STEP)"
    outputs:
      current_step: ${{ steps.get_step.outputs.current_step }}

  on_start:
    name: On start
    needs: get_current_step
    if: ${{ !github.event.repository.is_template }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Setup issues
        run: |
          echo "Make sure we are on step 0"
          if [ "$(cat .github/script/STEP)" != 0 ]; then
            echo "Current step is not 0"
            exit 0
          fi
          echo "Create issue #1 from file"
          gh issue create --title "Hello" -F .github/files/issue01.md
          echo "Create issue #2 from file"
          gh issue create --title "Fix sidebar" -F .github/files/issue02.md
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup file history
        run: |
          echo "Make sure we are on step 0"
          if [ "$(cat .github/script/STEP)" != 0 ]; then
            echo "Current step is not 0"
            exit 0
          fi
          git config user.name github-actions
          git config user.email github-actions@github.com
          git checkout main
          echo "Fetch remote changes to avoid conflicts"
          if ! git pull origin main --rebase; then
            echo "Rebase failed, attempting merge instead"
            git rebase --abort
            git pull origin main --no-rebase
          fi
          echo "Update _sidebar.md for the 1st time"
          if ! cmp -s .github/files/_sidebar01.md docs/_sidebar.md; then
            cp -f .github/files/_sidebar01.md docs/_sidebar.md
            git add docs/_sidebar.md
            git commit -m "updated _sidebar.md"
            git push origin main
          else
            echo "_sidebar.md already up to date for the 1st update"
          fi
          echo "Update _sidebar.md for the 2nd time"
          if ! cmp -s .github/files/_sidebar02.md docs/_sidebar.md; then
            cp -f .github/files/_sidebar02.md docs/_sidebar.md
            git add docs/_sidebar.md
            git commit -m "add sidebar to documentation"
            git push origin main
          else
            echo "_sidebar.md already up to date for the 2nd update"
          fi
          echo "Preserve the commit SHA"
          git log --all --oneline | grep "add sidebar to documentation" | cut -c 1-7 >> .github/files/SIDEBARCOMMIT
          git add .github/files/SIDEBARCOMMIT
          git commit -m "created SIDEBARCOMMIT"
          git push origin main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Update to step 1
        uses: skills/update-step-action@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          from_step: 0
          to_step: 1
